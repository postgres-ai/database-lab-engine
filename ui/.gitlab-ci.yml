include:
  - local: 'ui/packages/ce/.gitlab-ci.yml'
  - local: 'ui/packages/platform/.gitlab-ci.yml'

.ui_checks: &ui_checks
  rules:
    - if: $CI_COMMIT_TAG =~ /^ui\/[0-9.]+$/
    - if: $CI_COMMIT_TAG =~ /^v[a-zA-Z0-9_.-]*/
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'

.ui_cache: &ui_cache
  image: node:21.1.0-alpine
  cache: &cache
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - cache/Cypress
      - .pnpm-store
    policy: pull

check-code-style:
  <<: *ui_checks
  <<: *ui_cache
  stage: test
  before_script:
    - corepack enable
    - corepack prepare pnpm@8.9.2 --activate
    - export PNPM_HOME=/usr/local/bin
    - pnpm config set store-dir /builds/postgres-ai/database-lab/.pnpm-store/

  script:
    - pnpm --dir ui/ i
    - pnpm --dir ui/ --filter @postgres.ai/ce lint
    - pnpm --dir ui/ --filter @postgres.ai/platform lint
  interruptible: true
  cache:
    <<: *cache
    policy: push

semgrep-sast:
  stage: test
  image: returntocorp/semgrep
  <<: *ui_checks
  <<: *ui_cache
  variables:
    # See more at semgrep.dev/explore.
    SEMGREP_RULES: >-
      p/security-audit
      p/secrets
      p/default
      p/owasp-top-ten
      p/javascript
      p/react
    # Upload findings to GitLab SAST Dashboard:
    SEMGREP_GITLAB_JSON: "1"
  script: semgrep ci --gitlab-sast > gl-sast-report.json || true
  artifacts:
    reports:
      sast: gl-sast-report.json

e2e-ce-ui-test:
  <<: *ui_checks
  image: node:21.1.0
  stage: integration-test
  variables:
    CYPRESS_CACHE_FOLDER: '$CI_PROJECT_DIR/cache/Cypress'
  before_script:
    - apt update
    - apt install -y curl libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb
    - npm install -g wait-on
    - npm install -g pnpm
    # TODO: Set up caching.
#    - pnpm config set store-dir /builds/postgres-ai/database-lab/.pnpm-store/
  script:
    - pnpm --dir ui/ i --no-frozen-lockfile
    - pnpm --dir ui/ --filter @postgres.ai/ce exec cypress install
    - pnpm --dir ui/ --filter @postgres.ai/ce start & wait-on http://localhost:3001
    - pnpm --dir ui/ --filter @postgres.ai/ce cy:run
